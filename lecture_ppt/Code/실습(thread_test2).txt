#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define ARRAY_SIZE 100000000  // 배열의 크기를 1억으로 설정

int main() {
    int *array = malloc(ARRAY_SIZE * sizeof(int));  // 크기가 1억인 배열을 동적 할당
    long long sum = 0;  // 배열의 합을 저장할 변수 (long long 타입은 매우 큰 수를 저장 가능)

    // 배열을 초기화
    for (int i = 0; i < ARRAY_SIZE; i++) {
        array[i] = 1;  // 모든 배열 요소를 1로 설정
    }

    // 시간 측정을 위한 변수 선언
    clock_t start, end;  // 시작 및 끝 시간을 저장할 변수
    double cpu_time_used;  // 계산에 걸린 CPU 시간을 저장할 변수

    // 시간 측정 시작
    start = clock();  // 프로그램 실행 시간을 측정하기 위해 시작 시간 기록

    // 배열의 합을 계산
    for (int i = 0; i < ARRAY_SIZE; i++) {
        sum += array[i];  // 배열의 각 요소를 sum에 더함
    }

    // 시간 측정 종료
    end = clock();  // 배열 합 계산이 완료된 후 종료 시간 기록

    // CPU 시간을 계산 (종료 시간 - 시작 시간) / CLOCKS_PER_SEC (초 단위로 변환)
    cpu_time_used = ((double) (end - start)) / CLOCKS_PER_SEC;

    // 배열 합과 수행 시간을 출력
    printf("Single-threaded sum: %lld\n", sum);  // 배열의 합을 출력
    printf("Single-threaded execution time: %f seconds\n", cpu_time_used);  // 계산에 걸린 시간을 초 단위로 출력

    free(array);  // 동적 할당한 배열 메모리를 해제
    return 0;  // 프로그램 정상 종료
}

/* 실행 순서가 헷갈리시는 분들은 참고하세요 */
- 배열이 malloc()으로 동적 할당됩니다.
배열의 모든 요소가 1로 초기화됩니다.
시간 측정이 시작됩니다.
배열의 합을 계산하는 루프가 실행됩니다.
시간 측정이 끝나고, 걸린 시간이 계산됩니다.
배열의 합과 걸린 시간이 출력됩니다.
동적 할당된 메모리를 해제하고 프로그램이 종료됩니다
